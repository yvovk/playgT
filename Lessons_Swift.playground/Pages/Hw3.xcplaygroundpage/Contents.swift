//: [Previous](@previous)

import Foundation

/* Challange 1
 1.1 Представьте,что вы владелец розничного магазинаивам необходимо закупить
 товар,стоимость которого варьируется от его количества.Если количество
 закупаемого товара меньше 10 позиций,то цена равна 1000 рублей за штуку.От 10 до
 20 единиц товара будет стоить вам 800 рублей за штуку.Ивы заплатите 600 рублей за
 единцу при единовременно покупке от 20 единиц.Создайте условие для расчета цены
 за еденицу товаравзависмости от его количестваиподсичитайте общую сумму
 используя конструкцию if-else.Постарайтесь написать короткоеичитаемое
 решение */

// Sollution

var towar = 60
var price = 0

if towar < 10 {
    let price = towar * 1000
    print(price)
} else if towar >= 10 && towar <= 20 {
    let price = towar * 800
    print(price)
} else if towar > 20 {
    let price = towar * 600
    print(price)
}

/* Challenge 2
 ## Упражнение - опциональные значения

 >Во время выполнения упражнений данного плейграунда, вы будете выводить в консоль опциональные значения.  Компилятор Swift выдаст предупреждение: «Expression implicitly coerced from `Int?` to Any».  Для целей выполнения заданий, можете данные предупреждения игнорировать.

 Ваше приложение запрашивает пользователя его возраст.  Введённые пользователем данные передаются вам в виде текста, `String`.  Однако, вам нужно сохранить значение в виде целого числа `Int`.  Пользователь может сделать ошибку и ввести неверные данные.

 Объявите переменную `userInputAge` типа `String` и присвойте ей значение "34e" для моделирования опечатки.  Затем определите константу `userAge` типа `Int` и используйте конструктор `Int` для преобразования `userInputAge`.  Какую ошибку вы получаете?
 */
/*:
 Теперь поменяйте тип `userAge` на `Int?`, и напечатайте значение `userAge`.  Почему значение `userAge` равно `nil`?  Ответьте в комментарии или внутри команды print.
 */
/*:
 Теперь исправьте опечатку в значении `userInputAge`.  Что-нибудь в результатах вывода кажется вам неуместным?
 Напечатайте `userAge` снова, но теперь извлеките `userAge` с помощью оператора «!».
 */
/*:
 Используйте привязку опционалов для извлечения `userAge`.  Если `userAge` содержит значение, выведите его в консоль.
 */
/*:
 Теперь снова эмулируйте опечатку и попробуйте вывести на консоль целочисленное значение переменной `userInputAge`, при помощи оператора "!". Какую ошибку вы получите? Почему?
 */

// Sollution

var userInputAge = "34e"
let userAge = Int(userInputAge) // i got no errors
// print(userAge)
